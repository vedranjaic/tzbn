// Section Q/A
.section-qa {
	// flex: 1;
	height: calc(100vh - 10px);
	width: 86vw;
	display: flex;
	justify-content: space-between;
	.q {
		width: 60%;
		padding: 3.5em 5em;
		// background-color: functional(yellow);
		background: radial-gradient(neos(teal-light), neos(teal-medium));
		.step-counter {
			text-transform: uppercase;
			color: $white;
			font-size: 16px;
		}
		.question-title {
			color: neos(teal-dark);
			font-weight: 700;
			line-height: 1.3;
		}
		kbd {
			background-color: lighten($grey, 20%);
		}
	}
	.a {
		width: 40%;
		background-color: neos(teal-dark);
		padding: 3.5em 2em;
		.a-title{
			color: $white;
			display: block;
			text-transform: uppercase;
			margin-bottom: 1.2em;
		}
		.list-answers {
			display: flex;
			// flex-wrap: wrap;
			flex-direction: column;
			&:hover {
				.btn {
					background-color: lighten(neos(teal-dark), 40%);
				}
			}
			li {
				// width: 50%;
				height: 15vh;
				margin-bottom: 1em;
				&:nth-child(1) {
					.btn {
						&::before {
							content: 'A';
						}						
					}
				}
				&:nth-child(2) {
					.btn {
						&::before {
							content: 'B';
						}						
					}
				}
				&:nth-child(3) {
					.btn {
						&::before {
							content: 'C';
						}						
					}
				}
				&:nth-child(4) {
					.btn {
						&::before {
							content: 'D';
						}						
					}
				}
				&.answer {
					.btn {
						position: relative;
						background-color: lighten(neos(teal-dark), 40%);
						// overflow: hidden;
						&::after {
							position: absolute;
							bottom: -0.45em;
							right: -0.15em;
							font-size: 6em;
							opacity: 0.2;
						}
					}
					&[class*="answer-"] {
						.btn {
							color: $white;
						}
					}
					// Radio button answers
					input[type="radio"] {
						display: none;
					}
					&.user-choice {
						.btn {
							background-color: lighten(neos(teal-dark), 60%);
						}
					}
					&.submit {
						.btn {
							padding: unset;
							background-color: lighten(neos(teal-dark), 60%);
							position: relative;
							&::after {
								@include transition(opacity);
								content: '\f101';
								font-family: $fa;
								position: absolute;
								right: 20px;
								top: 50%;
								transform: translateY(-45%);
								font-size: 2em;
								opacity: 0;
								color: rgba($grey, 0.3);
							}
							&:hover {
								background-color: lighten(neos(teal-dark), 40%);
								&::after {
									opacity: 1;
								}
							}
						}
					}
				}
				&.answer-correct {
					.btn {
						background-color: functional(green) !important;
						&::after {
							content: '\f00c';
							font-family: $fa;
						}
					}
				}
				&.answer-incorrect {
					.btn {
						background-color: functional(red) !important;
						&::after {
							content: '\f00d';
							font-family: $fa;
						}
					}
				}
			}
			.btn {
				display: flex;
				position: relative;
				align-items: center;
				justify-content: center;
				width: 100%;
				height: 100%;
				border: 0;
				border-radius: 0;
				font-size: 24px;
				white-space: normal;
				padding-left: 70px;
				background-color: lighten(neos(teal-dark), 60%);
				&:hover,
				&:focus {
					background-color: lighten(neos(teal-dark), 80%);
				}
				&::before {
					position: absolute;
					left: 0;
					top: 0;
					bottom: 0;
					width: 60px;
					display: flex;
					align-items: center;
					justify-content: center;
					background-color: rgba(neos(teal-dark), 0.2);
				}
			}
		}
	}
}



// Pre and Code
pre {
	padding: 15px;
	font-size: 18px;
	background-color: $grey !important;
	border: 0;
	color: $white;
	margin-top: 2em;
	text-shadow: none !important;
	display: none;
	code {
		color: $white !important;
		text-shadow: none !important;
		white-space: pre-wrap !important;
		&.language-javascript {
			.token.operator {
				background-color: transparent !important;
			}
		}
	}
	.hljs {
		background-color: transparent;
		color: lighten($grey, 70%);
		&-string {
			color: functional(red);
		}
		&-built_in {
			color: functional(green);
		}
	}
}










